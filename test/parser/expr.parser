Test expr parser
--PASS--
class foo {
	function aa() {
		$parent_resource = " in '$this->parent->template_resource}'";
	}
}
--PASS--
$a = 1 + 2;
$a++;
$a--;
++$a;
--$a;
--PASS--
$b = (3 + 4) * $a / 2;
--PASS--
$b ^= $a | $b;
$b |= $a ^ $b;
$b **= $a % $b;
$b %= $a ** $b;
$b <<= $a >> $b;
$b >>= $a << $b;
--PASS--
$b = $a OR $b;
$b = $a AND $b;
$b = $a XOR $b;
$b = $a > $b;
$b = $a instanceof $b;
$b = $a >= $b;
$b = $a <= $b;
$b = $a == $b;
$b = $a != $b;
--PASS--
@silent_fail();
--PASS--
$data = foo()['offset'];
foo()['offset'] = 'something';
--PASS--
list($a, $b) = array(1, 2);
$b = empty($a);
--PASS--
$arg = include($a);
$arg = @include_once($a);
$arg = require($a);
$arg = require_once($a);
$b = @eval($arg);
--PASS--
$a = (int)$b;
$a = (double)$b;
$a = (unset)$b;
$a = (bool)$b;
$a = (string)$b;
$a = (array)$b;
$a = (object)$b;
print 'done';
exit(0);
exit;
--PASS--
$var = new class extends foo {
};
list(list($a, $b), $c) = [
  [1, 2], 3
];
--PASS--
echo "test: {$this->test->foo}";
$var = &new foo();
--PASS--
$var += $a;
$var -= $a;
$var *= $a;
$var /= $a;
$var .= $a;
$var &= $a;
$var |= $a;
--PASS--
$exec = `pstree -ap $process {$foo->bar}`;
